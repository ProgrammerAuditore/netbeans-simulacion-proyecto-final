/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author victo
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.modelo.addColumn("No. Cliente");
        this.modelo.addColumn("ri");
        this.modelo.addColumn("T. servicio");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        btnClean = new javax.swing.JButton();
        btnRun = new javax.swing.JButton();
        campo_NoClientes = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        campo_MediaClientes = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        mi_tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Proyecto final");
        setResizable(false);

        background.setBackground(new java.awt.Color(0, 102, 102));

        btnClean.setBackground(new java.awt.Color(153, 51, 0));
        btnClean.setForeground(new java.awt.Color(255, 255, 255));
        btnClean.setText("Clean");
        btnClean.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCleanMouseReleased(evt);
            }
        });

        btnRun.setBackground(new java.awt.Color(0, 102, 0));
        btnRun.setForeground(new java.awt.Color(255, 255, 255));
        btnRun.setText("Run");
        btnRun.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnRunMouseReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Clientes:");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Introduzca el número de clientes");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Introduzca la media para cada cliente");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Media:");

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campo_MediaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel2)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, backgroundLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(campo_NoClientes)))))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRun, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)))
                .addGap(62, 62, 62))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campo_NoClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo_MediaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRun)
                    .addComponent(btnClean))
                .addGap(23, 23, 23))
        );

        mi_tabla.setModel(this.modelo);
        jScrollPane1.setViewportView(mi_tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCleanMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCleanMouseReleased
        // Se ejecuta este método
        this.fncBtnClean();
        
    }//GEN-LAST:event_btnCleanMouseReleased

    private void btnRunMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRunMouseReleased
        // Se ejecuta este método
        this.fncBtnRun();
    }//GEN-LAST:event_btnRunMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnRun;
    private javax.swing.JTextField campo_MediaClientes;
    private javax.swing.JTextField campo_NoClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mi_tabla;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel modelo = new DefaultTableModel();
    int noclientes = 0;
    double media = 0;
    
    private boolean modeloEstaVacio(){
        int filas = this.modelo.getRowCount();
        while(this.modelo.getRowCount() > 0){
            filas--;
            this.modelo.removeRow(filas);
        }
        
        return ( this.modelo.getRowCount() == 0 );
    }
    
    private void fncBtnClean() {
        this.campo_MediaClientes.setText(null);
        this.campo_NoClientes.setText(null);
        this.modeloEstaVacio();
    }

    private void fncBtnRun(){
        
        try{
            
            this.CamposSonVacios();
            this.CamposSonNegativos();
            this.modeloEstaVacio();
            
            for(int item=0; item < noclientes; item++){
                
                double ri = Double.parseDouble( String.format("%.2f", Math.random()) );
                double tservicio = Double.parseDouble( String.format("%.2f", (media*ri)) );
                 
                this.modelo.addRow(new Object[]{ (item+1) , ri , tservicio });
                
            }

        } catch (ExcepcionCampos ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage() );
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Los campos son incorrectos.");
        }
        
    }
    
    // * Verificar que los campos no esten vacios
    private void CamposSonVacios() throws ExcepcionCampos{
        if( this.campo_NoClientes.getText().trim().isEmpty() || this.campo_MediaClientes.getText().trim().isEmpty()){
            throw new ExcepcionCampos("Los campos no deben estar vacios.");
        }
        
    }
    
    // * Verificar que los campos no sean negativos
    private void CamposSonNegativos() throws ExcepcionCampos{
        this.noclientes = Integer.parseInt(this.campo_NoClientes.getText().trim());
        this.media = Integer.parseInt(this.campo_MediaClientes.getText().trim());
        if( noclientes < 0 || media < 0){
            throw new ExcepcionCampos("Los campos no deben ser negativos");
        }
        
    }
    
    // * Crear una excepcion propia
    private class ExcepcionCampos extends Exception{
        public ExcepcionCampos(String message) {
            super(message);
        }
    } 
   
}

